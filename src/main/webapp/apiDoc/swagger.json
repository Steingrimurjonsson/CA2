{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": "Group #3 CA2 REST API"
  },
  "schemes": [
    "http"
  ],

  "host": "ruffsacks.com",

  "basePath": "/CA2/api/person",
  "tags": [
    {
      "name": "person",
      "description": "Everything related to Person"
    }
  ],
  "paths": {
    "/all": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Gets all persons",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of persons",
            "schema": {
              "type": "object",
              "properties": {
                "all": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Find a person by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id for person to find",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Person with the provided ID",
            "schema": {
              "$ref": "#/definitions/PersonOut"
            }
          }
        }
      }
    },
    "/": {
      "post": {
        "tags": [
          "person"
        ],
        "summary": "Create a new Person",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PersonIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the newly created person with ID",
            "schema": {
              "$ref": "#/definitions/PersonOut"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PersonOut": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1000
        },
        "fName": {
          "type": "string",
          "example": "Kurt"
        },
        "lName": {
          "type": "string",
          "example": "Wonnegut"
        },
        "email": {
          "type": "string",
          "example": "Some@email.com"
        }
      }
    },
    "PersonIn": {
      "type": "object",
      "properties": {
        "fName": {
          "type": "string",
          "example": "Kurt"
        },
        "lName": {
          "type": "string",
          "example": "Wonnegut"
        },
        "email": {
          "type": "string",
          "example": "Some@email.com"
        }
      }
    }
  }
}